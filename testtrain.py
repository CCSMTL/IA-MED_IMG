 = Conv2D(64, (3, 3))(x)
x = Activation('relu')(x)
x = MaxPooling2D(pool_size=(2, 2))(x)
x = Dropout(0.25)(x)
x = Flatten()(x)
x = Dense(512)(x)
x = Activation('relu')(x)
x = Dropout(0.5)(x)
output1 = Dense(1, activation='sigmoid')(x)
output2 = Dense(1, activation='sigmoid')(x)
output3 = Dense(1, activation='sigmoid')(x)
output4 = Dense(1, activation='sigmoid')(x)
output5 = Dense(1, activation='sigmoid')(x)
output6 = Dense(1, activation='sigmoid')(x)
output7 = Dense(1, activation='sigmoid')(x)
output8 = Dense(1, activation='sigmoid')(x)
output9 = Dense(1, activation='sigmoid')(x)
output10 = Dense(1, activation='sigmoid')(x)
output11 = Dense(1, activation='sigmoid')(x)
output12 = Dense(1, activation='sigmoid')(x)
output13 = Dense(1, activation='sigmoid')(x)
output14 = Dense(1, activation='sigmoid')(x)
output15 = Dense(1, activation='sigmoid')(x)

model = Model(inp, [output1, output2, output3, output4, output5, output6, output7, output8, output9,
                    output10, output11, output12, output13, output14, output15])
print(model.input_shape)
print(model.output_shape)
model.compile(optimizers.Adam(lr=0.0001,
                              decay=1e-6),
